flask_venv) F:\#@cking tutorial\coding\python\virtual_env\flask\flask_venv\microblog>python
Python 3.8.3 (tags/v3.8.3:6f8c832, May 13 2020, 22:37:02) [MSC v.1924 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> from app import db
>>> from app.models import User,Post
>>> u=User(username="john" ,email="user@gmail.com")
>>> db.session.add(u)
>>> db.session.commit()
>>> u=User(username="susan" ,email='susu@gma.com")
  File "<stdin>", line 1
    u=User(username="susan" ,email='susu@gma.com")
                                                 ^
SyntaxError: EOL while scanning string literal    
>>>  u=User(username="susan" ,email='susu@gma.com')
  File "<stdin>", line 1
    u=User(username="susan" ,email='susu@gma.com')
    ^
IndentationError: unexpected indent
>>>  u=User(username="susan" ,email="susu@g.com")  
  File "<stdin>", line 1
    u=User(username="susan" ,email="susu@g.com")
    ^
IndentationError: unexpected indent
>>> u=User(username="susan" ,email='susu@gma.com")  
  File "<stdin>", line 1
    u=User(username="susan" ,email='susu@gma.com")
                                                 ^
SyntaxError: EOL while scanning string literal    
>>> u=User(username="susan" ,email="susu@g.com") 
>>> db.session.add(u)
>>> db.session.commit()
>>> users=User.query.all
>>> users.username.data
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'function' object has no attribute 'username'
>>> users
<bound method Query.all of <flask_sqlalchemy.BaseQuery object at 0x00000200EBCE4DC0>>>>> print(users
... 
KeyboardInterrupt
>>> print(users)
<bound method Query.all of <flask_sqlalchemy.BaseQuery object at 0x00000200EBCE4DC0>>>>> users=User.query.all()
>>> users
[<User john>, <User susan>]
>>> for u in users:
...     print(u.id,u.username,u.email)
...
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
AttributeError: 'User' object has no attribute 'id'
>>> for u in users:
...     print(u._id,u.username,u.email)
...
1 john user@gmail.com
2 susan susu@g.com
>>> u=User.query.get(1)
>>> u
<User john>
>>> u.usrname
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'User' object has no attribute 'usrname'
>>> u.username
'john'
>>> u.email
'user@gmail.com'
>>> u._id
1
>>> p=Post(body="First posting bhenchod" , author=u)
>>> db.session.add(p)
>>> db.session.commit()
>>> u
<User john>
>>> u.posts.all()
[<Post First posting bhenchod>]
>>> u=User.query.get(2)
>>> u.posts.all()
[]
>>> posts=Post.query.all()
>>> for post in posts:
...     print(post.body)
...
First posting bhenchod
>>> for post in posts:
...     print(post._id,post.body,post.author)
...
1 First posting bhenchod <User john>
>>> #magic sql alchemy
>>> User.query.order_by(User.username.dec()).all()
Traceback (most recent call last):
  File "F:\#@cking tutorial\coding\python\virtual_env\flask\flask_venv\lib\site-packages\sqlalchemy\sql\elements.py", line 744, in __getattr__
    return getattr(self.comparator, key)
AttributeError: 'Comparator' object has no attribute 'dec
>>> User.query.order_by(User.username.desc()).all()
[<User susan>, <User john>]
>>> #deleting objects
>>> users=Users.query.all()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Users' is not defined
>>> users=User.query.all()
>>> for u in users:
...     db.session.delete(u)
... 
>>> posts=Post.query.all()
>>> for p in posts:
...     db.session.delete(p)
... 
>>> db.session.commit()
>>> 